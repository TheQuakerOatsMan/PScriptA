package AnalizadorDOsCero;

public class tablas {
	String [][] tabla1 = 
		{
				{" " ,"identificador","id_ent","abP"  ,"ciP","op_sum"  ,"op_res","op_mult","op_div","id_cad","id_cart","finale"	},
				{"E" ,"T E’"		 ,"T E’"  ,"T E’" ," "  ," "	   ," "	    ," "	  ," "	   ,"T E’"	,"T E’"	  ," "		},
				{"E’"," "			 ," "	  ," "	  ,"ç"  ,"op_sum T E’","op_res T E’","ç"	  ,"ç"	   ," "	 	," "	  ,"ç"		},	
				{"T" ,"F T’"		 ,"F T’"  ,"F T’" ," "  ," "	   ," "	    ," "	  ," "	   ,"F T’"	,"F T’"	  ," "		},
				{"T’"," "			 ," "	  ," "	  ,"ç"  ,"ç"	   ,"ç"		,"op_mult F T’" ,"op_div F T’"," "	 	," "	  ,"ç"		},
				{"F" ,"identificador","id_ent","abP E ciP"," "," "     ," "		," "	  ," "	   ,"id_cad","id_cart"," "		}
		};
	
	String [][] laperrona = 
		{
				{" "          	,"identificador"		,"id_ent"		,"id_dec"		,"id_cad"	,"id_cart"		,"("			,")","+"		,"-"		,"*","/"	,"mod"		,"ala"		,"tallo"		,"<"	,">"	,"<="	,">="	,"!="	,"=="	,"!!"	,"&"	 ,"||"		,"verdadero"	,"falso"		,"cambio"		,"caso"	,"si"					,"sino"					,"para"					,"mientras"				,"repeat"				,"hacer","endif","endfor","endmientras" ,"principal","clase","ent"	,"dec"	,"cart"	,"cad"	,"bool"	,"->",","				,"proc"	,"funcion"	,"finproc"	,"finfuncion"	,"endfin"	,"idproc"				,"idfuncion"				,"retornar"	,"$",	"finale",	"id_clase", 	"inicio"},	
				{"prog"			," "					," "			," "			," "		," "			," "			," "," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			," "			," "			," " 	," " 					," "					," "					," "					," "					," "	," "	," "	 ," "			,"principal clase id_clase inicio crea sentencias finale",	"clase id_clase inicio crea sentencias finale"			," "	," "," "," "," "," "," "," "," "," "," "," "	," "," "," "								," ",	" ",	" "	},															
				{"crea"			," "					," "			," "			," "		," "			," "			," "," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			," "			," "			," "	," " 					," "					," "					," "					," "					," "	," "	," "	 ," "			," "		," "	,"dec crea",	"dec crea",	"dec crea",	"dec crea"				,"dec crea",	" "	," "		,"modulos crea"	,	"modulos crea"," "," "," "," "	," "," "								," ",	"ç"	},							
				{"dec"			," "					," "			," "			," "		," "			," "			," "," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			," "			," "			," "	," " 					," "					," "					," "					," "					," "	," "	," "	 ," " 			," "		," "	,"ent identificador sigid puntcoma",	 "dec identificador sigid putcoma"				,"cart id sigid puntcoma"	,	 "cad id sigid puntcoma","bool id sigid puntcoma"," "," "," "," "," "," "	,"ç"," "," "	," "					," ",	" ",	" " },					
				{"sigid"		," "					," "			," "			," "		," "			," "			," "," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			," "			," "			," "	," " 					," "					," "					," "					," "					," "	," "	," "	 ," "			," "		," "	," "	," "	," "	," "	," "	,"> L sigid"			,", identificador sigid"		," "			," "		," "		," "			," "," "," "," "					," ",	" ", 	" "},										
				{"modulos"		,"ç"					," "			," "			," "		," "			," "			," "," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			," "			," "			," "	,"ç" 					," "					,"ç"					,"ç"					,"ç"					," "	," "	," "	 ," "			," "		," "	,"ç"	,"ç"	,"ç"	,"ç"	,"ç"	," " ," "				,"procedimiento"	, 	"funcion","ç"			," "		," "		," "			," "	," "						," ",	" ",	" "},				
				{"procedimiento"," "					," "			," "			," "		," "			," "			," "," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			," "			," "			," "	," " 					," "					," "					," "					," "					," "	," "	," "	 ," "			," "		," "	," "	," "	," "	," "	," "	," " ," "				,"procedimiento idproc ( list-arg ) inicio sentencias finproc"			," "," "," "	," "," "," "," "					," ",	" ",	" "},							
				{"funcion"      ," "					," "			," "			," "		," "			," "			," "," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			," "			," "			," "	," " 					," "					," "					," "					," "					," "	," "	," "	 ," "			," "		," "	," "	," "	," "	," "	," "	," " ," "				," "	,"funcion idf ( list-arg ) tiporetorno inicio sentencias endf"		," "," "	," "," "," "," "					," ", 	" ",	" "},								
				{"tiporetorno"	," "					," "			," "			," "		," "			," "			," "," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			," "			," "			," "	," " 					," "					," "					," "					," "					," "	," "	," "	 ," "			," "		," "	,"ent"	,"dec"	,"cart"	,"cad"	,"bool"	," " ," " 				," " 	," " 		," " 		," " 			," " 		," " 		," " 			," " 								," ", 	" ",	" "},		
				{"list-arg"		," "					," "			," "			," "		," "			," "			,"ç"," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			," "			," "			," "	," " 					," "					," "					," "					," "					," "	," "	," "	 ," "			," "		," "	,"ent identificador siglist","dec identificador siglist"		,"cart identificador siglist","cad identificador siglist","bool identificador siglist"	," "," "," "," "," "," "," "," "," "," "," "," ",	" "},												
				{"siglist"		," "					," "			," "			," "		," "			," "			,"ç"," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			," "			," "			," "	," " 					," "					," "					," "					," "					," "	," "	," "	 ," "			," "		," "	," "	," "	," "	," "	," "	," " ,"list-arg"		," "	," "		," "		," "			," "		," "					," "						," "		," ",	" ", 	" "},
				{"list-param"	,"L sig-param"			,"L sig-param"	,"L sig-param","L sig-param","L sig-param"	,"L sig-param"	,"ç"," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			,"L sig-param"	,"L sig-param"	," "	," " 					," "					," "					," "					," "					," "	," "	," "	 ," "			," "		," "	," "	," "	," "	," "	," "	," " ," "				," "	," "		," "		," "			," "		," "					,"L sig-param"				," "		," ", 	" ",	" "}, 			
				{"sig-param"	," "					," "			," "			," "		," "			," "			,"ç"," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			," "			," "			," "	," " 					," "					," "					," "					," "					," "	," "	," "	 ," "			," "		," "	," "	," "	," "	," "	," "	," " ,", L sig-param"	," "	," "		," "		," "			," "		," "					," "						," "		," ",	" ",	" "},										
				{"sentencias"	,"sentencia sentencias"	," "			," "			," "		," "			," "			," "," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			," "			," "			," "	,"sentencia sentencias"	," "					,"sentencia sentencias"	,"sentencia sentencias"	, "sentencia sentencias"," "	,"ç"	,"ç"	 ,"ç"			," "		," "	," "	," "	," "	," "	," "	," " ," "				," "	," "		,"ç"		,"ç"			,"ç"		,"sentencia sentencias"	," "			,"sentencia sentencias"	,"ç",	"ç",	" "	},	
				{"sentencia"	,"asigna puntcoma"				," "			," "			," "		," "			," "			," "," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			," "			,"cambio ( id ) inicio caso ( L ) ?: sentencias sigcaso default ?: sentencias ruptura ; fin"," ","si L inicio sentencias sino endif"," ","para L do sentencias endpara","mientras L do sentencias endmientras","repeat sentencias until L ;"," "," "," "," "," "," ","dec sentencias","dec sentencias","dec sentencias"  ,"dec sentencias","dec sentencias"," "," "," "," "," "," "," "	,"asigna puntcoma","asigna puntcoma"," "," "},
				{"sigcaso"		," "					," "			," "			," "		," "			," "			," "," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			," "			," "			,"caso ( L ) ?: sentencias ruptura ; sigcaso" 			," "					," "					," "					," " 	," " 	," " 	," " 			," "		," "	," " 	," "	," "	," "	," "	," " ," "				," "	," "		," "		," "			," "		," "	 				," "						," "		," ",	" ", 	" "}, 																												
				{"sigif"		," "					," "			," "			," "		," "			," "			," "," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," "	," "	 ," " 		," "			," "			," "			," "	," "					,"sino sentencias"		," "					," "					," "					," "	," "	," "	 ," "	 		," "		," "	," "	," "	," "	," "	," "	," "	," " 			," "	," "		," "		," "			," "		," "					," "						," "		," ",	" ",	" "},																			
				{"asigna"		,"identificador op_asig L"				," "			," "			," "		," "			," "			," "," "		," "		," "," "	," "		," "		," "			," "	," "	," " 	," " 	," " 	," " 	," " 	," "	 ," " 		," "			," "			," "			," "	," "					," "					," "					," "					," "					," "	," "	," "	 ," "	 		," "		," "	," "	," "	," "	," "	," "	," "	," " 			," "	," "		," "		," "			," "		,"idproc ( list-param )"," "						,"retornar L"," "," "," "},				
				{"L"			,"R L’"					,"R L’"			,"R L’"			,"R L’"		,"R L’"			,"R L’"			," "," "		," "		," "," "	," "		,"R L’"		,"R L’"			," "	," "	," " 	," " 	," " 	," " 	,"!! L"	," "	 ," " 		,"R L’"			,"R L’"			," "			," "	," "					," "					," "					," "					," "					," "	," "	," "	 ," "	 		," "		," "	," "	," "	," "	," "	," "	," "	," " 			," "	," "		," "		," "			," "		," "					,"R L’"						," "		," ",	" ", " "	},											
				{"L’"			," "					," "			," "			," "		," "			," "			,"ç","ç"		,"ç"		,"ç","ç"	,"ç"		," "		," "			,"ç"	,"ç"	,"ç" 	,"ç" 	,"ç" 	,"ç" 	," "	,"& R L’","|| R L’" ," "			," "			," "			," "	," "					," "					," "					," "					," "					,"ç"	," "	," "	 ," "	 		," "		," "	," "	," "	," "	," "	," "	," "	," " 			," "	," "		," "		," "			," "		," "					," "						," "		,"ç",	" ", " "	},																											
				{"R"			,"E R’"					,"E R’"			,"E R’"			,"E R’"		,"E R’"			,"E R’"			," "," "		," "		," "," "	," "		,"E R’" 	,"E R’" 		," "	," "	," " 	," " 	," " 	," " 	," " 	,"ç" 	 ,"ç"  		,"E R’"			,"E R’"			," "			," "	," "					," "					," "					," "					," "					,"ç"	," "	," "	 ," "	 		," "		," "	," "	," "	," "	," "	," "	," "	," " 			," "	," "		," "		," "			," "		," "					,"E R’"						," "		,"ç", 	" ", " "	},
				{"R’"			," "					," "			," "			," "		," "			," "			,"ç","ç"		,"ç"		,"ç","ç"	,"ç"		," "		," "			,"< E"	,"> E"	,"<= E"	,">= E"	,"! E"	,"== E"	," "	,"ç"	 ,"ç"		," "			," "			," "			," "	," "					," "					," "					," "					," "					,"ç"	," "	," "	 ," "	 		," "		," "	," "	," "	," "	," "	," "	," "	," " 			," "	," "		," "		," "			," "		," "					," "						," "		,"ç",	" ", " "	},									
				{"E"			,"T E’"					,"T E’"			,"T E’"			,"T E’"		,"T E’"			,"T E’"			," "," "		," "		," "," "	," "		,"T E’"		,"T E’"			," "	," "	," " 	," " 	," " 	," " 	," "	," "	 ," "		,"T E’"			,"T E’"			," "			," "	," "					," "					," "					," "					," "					," "	," "	," "	 ," "	 		," "		," "	," "	," "	," "	," "	," "	," "	," " 			," "	," "		," "		," "			," "		," "					,"T E’"						," "		," ",	" ", " "	},															
				{"E’"			," "					," "			," "			," "		," "			," "			,"ç","+ T E’"	,"- T E’"	,"ç","ç"	,"ç"		," "		," "			,"ç"	,"ç"	,"ç" 	,"ç" 	,"ç" 	,"ç" 	," "	,"ç"	 ,"ç"		," "			," "			," "			," "	," "					," "					," "					," "					," "					,"ç"	," "	," "	 ," "	 		," "		," "	," "	," "	," "	," "	," "	," "	," " 			," "	," "		," "		," "			," "		," "					," "						," "		,"ç", 	" ", " "    },																		
				{"T"			,"F T’"					,"F T’"			,"F T’"			,"F T’"		,"F T’"			,"F T’"			," "," "		," "		," "," "	," "		,"F T’"		,"F T’"			," "	," "	," " 	," " 	," " 	," " 	," "	," "	 ," "		,"F T’"			,"F T’"			," "			," "	," "					," "					," "					," "					," "					," "	," "	," "	 ," "	 		," "		," "	," "	," "	," "	," "	," "	," "	," " 			," "	," "		," "		," "			," "		," "					,"F T’"						," "		," ", 	" ", " "},																														
				{"T’"			," "					," "			," "			," "		," "			," "			,"ç","ç"		,"ç"		,"* F T’"	,"* F T’"	,"mod F T’"	," "			,"ç"	,"ç"	,"ç"	,"ç"	,"ç" 	,"ç" 	," "	,"ç"	 ,"ç"		," "			," "			," "			," "	," "					," "					," "					," "					," "					,"ç"	," "	," "	 ," "	 		," "		," "	," "	," "	," "	," "	," "	," "	," " 			," "	," "		," "		," "			," "		," "					," "						," "		,"ç", 	" ", " "},											
				{"F"			,"identificador"		,"id_ent"		,"id_dec"		,"id_cad"	,"id_cart"		,"( L )"		," "," "		," "		," "," "	," "		,"ala ( L )","tallo ( L )"	," "	," "	," " 	," " 	," " 	," " 	," "	," "	 ," "		,"true"			,"false"		," "			," "	," "					," "					," "					," "					," "					," "	," "	," "	 ," "	 		," "		," "	," "	," "	," "	," "	," "	," "	," " 			," "	," "		," "		," "			," "		," "					,"idfuncion ( list-param )"	," "		," ",  	" ", " "},												
	};

}
